function Anima(name, px) { // version 3

    if (!document.getElementById(name)) {
        console.error('Anima error: element ' + name + ' not found');
        return false;
    }

    this.name = name;
    this.px = px;
    this.t_val = '0, -50px'; // по умолчанию сдвиг наверх на 50px
    this.t_type = 'translate';
    this.trans = false;
    this.coef = undefined; //коэфицент для открисовки анимаций текста в спанах
    this.anima_prop_x = 0;
    this.anima_sign_x = '+';
    this.anima_prop_y = 0;
    this.anima_sign_y = '+';
    this.spanTransform = '';
    this.spanTransition = '';
    this.pos = undefined;
    this.tag = document.getElementById(name);
    this.tag.setAttribute('shown', false);
    this.back = 15; // смещение фона по умолчанию
    this.opasity = true;
    this.tag.style.opacity = 0;

    this.startPosition = function () {
        if (this.pos === undefined) {
            this.pos = window.pageYOffset;
        }
    };
    this.noOpacity = function () {
        this.opasity = false;
        this.tag.style.opacity = 1;
    };

    this.setXY = function (x, y) {
        this.setX(x);
        this.setY(y);
    };

    this.setX = function (val) {
        if (val < 0) {
            this.anima_sign_x = '-';
            val *= -1;
        }
        this.anima_prop_x = val;
    };

    this.vCss = function (transform, transition) {
        if (typeof transform === 'undefined') {
            transform = 'skewY(-30deg)';
        }
        if (typeof transition === 'undefined') {
            transition = 'all 0.6s cubic-bezier(0.4, 0, 0.6, 1) 0.2s';
        }
        this.spanTransform = transform;
        this.tag.style.transform = transform;
        this.tag.style.transition = transition;
    };


    this.setY = function (val) {
        if (val < 0) {
            this.anima_sign_y = '-';
            val *= -1;
        }
        this.anima_prop_y = val;
    };

    this.setVal = function (val) {
        this.t_val = val;
    };

    this.setType = function (type) {
        this.t_type = type;
    };

    this.setBack = function (bg) {
        this.back = bg;
    };

    this.setCss = function (time, type) { // замена времени анимации и ее типа
        if (typeof time === 'undefined') {
            time = '0.7s';
        }
        if (typeof type === 'undefined') {
            type = 'cubic-bezier(.21,.08,.24,.91)';
        }

        this.tag.setAttribute("style",
                "transition-timing-function:" + type + ';' +
                "-webkit-transition-timing-function:" + type + ';' +
                "transition-duration:" + time + ';' +
                "-webkit-transition-duration:" + time + ';'
                );
    };

    this.addSpan = function (type) {
        this.noOpacity();
        var ins = this.tag.innerHTML;
        var arr;
        var res = '';
        if (type === 'char') {
            for (var i = 0; i < ins.length; i++) {
                res += '<span>' + ins[i];
                if (ins[i] === ' ') {
                    res += '</span> ';
                } else {
                    res += '</span>';
                }
            }
        }
        if (type === 'word') {
            arr = ins.split(/\s+/g);
            arr.forEach(function (element) {
                res += '<span>' + element + '</span> ';
            });
        }
        this.tag.innerHTML = res;
    };

    this.spanCss = function (transform, transition, coef) {
        if (typeof transform === 'undefined') {
            transform = 'translate(0px, 300px) scale(0.9) skewY(30deg)';
        }
        if (typeof transition === 'undefined') {
            transition = 'all 0.6s cubic-bezier(0.4, 0, 0.6, 1) 0.2s';
        }
        this.spanTransform = transform;
        this.spanTransition = transition;
        this.coef = coef;
        this.spanAnimaCss(transform, transition, 0, coef);
    };

    this.spanAnimaCss = function (transform, transition, opacity, k) {
        let elems = document.querySelectorAll('#' + this.name + ' span');

        let i = 1;
        [].forEach.call(
                elems,
                function (el) {

                    function noLinearTrans(transition, i, k) {
                        if (typeof k === 'undefined') {
                            k = 10;
                        }
                        var temp = transition.split('s');
                        var temp2 = temp[0].split(' ');
                        transition = temp2[0] + ' ' + ((i + 1) / k) + 's' + temp[1] + 's';

                        return transition;
                    }
                    ;
                    console.log(i);
                    el.style.display = 'inline-block';
                    el.style.transition = noLinearTrans(transition, i, k);
                    el.style.transform = transform;
                    el.style.opacity = opacity;
                    i++;
                }
        );
    };

    this.isVisible = function () {
        var vpH = window.innerHeight,
                st = document.body.scrollTop || document.documentElement.scrollTop,
                y = this.tag.offsetTop,
                elementHeight = this.tag.offsetHeight;

        return ((y + this.px < (vpH + st)) && (y > (st - elementHeight)));
    };

    this.setTransform = function (str) {
        this.trans = str;
    };

    this.go = function () { // старт после загрузки страницы
        this.tag.setAttribute('shown', true);
        if (this.trans) {
            this.tag.style.transform = this.trans;
        } else {
            this.tag.style.transform = this.t_type + '(' + this.t_val + ')';
        }
        this.tag.style.opacity = 0;
    };

    this.signal = function (replay) {
        if (typeof replay === 'undefined') {
            replay = false;
        }

        if (this.tag.getAttribute('shown') && this.isVisible(this.px)) {
            console.log(1);
            if (!replay) {
                this.tag.setAttribute('shown', true);
            }
            if (this.trans) {
                this.tag.style.transform = this.trans;
            } else {
                this.tag.style.transform = this.t_type + '(' + this.t_val + ')';
            }
            if (this.opasity) {
                this.tag.style.opacity = 1;
            }
        } else {
            if (replay && !this.isVisible(this.px)) {
                this.tag.style.transform = 'none';
                this.tag.style.opacity = 0;
            }
        }
    };

    this.signal_back = function (type) {
        var scrolled = window.pageYOffset || document.documentElement.scrollTop;
        var scrolled_px = 0;
        scrolled_px = (scrolled / this.back);
        this.tag.css('background-position-' + type, scrolled_px + '%');
    };

    this.sspan = function (replay) { //true - с повтором
        if (typeof replay === 'undefined') {
            replay = false;
        }
        if (this.tag.getAttribute('shown') && this.isVisible(this.px)) { //видно
            console.log(1);
            if (!replay) {
                this.tag.setAttribute('shown', true);
            }
            this.spanAnimaCss('none', this.spanTransition, 1, this.coef);
        } else {
            if (replay) {
                this.spanAnimaCss(this.spanTransform, this.spanTransition, 0, this.coef);
            }
        }
    };

    this.anima = function (duration) {
        if (typeof duration === 'undefined') {
            duration = 500;
        }
        if (this.isVisible()) {
            this.startPosition();
            if (this.opasity) {
                this.tag.style.opacity = 1;
            }
            var scroll_done = (window.pageYOffset - this.pos);
            var proc_x = this.anima_prop_x * ((scroll_done - this.px) / duration);
            var proc_y = this.anima_prop_y * ((scroll_done - this.px) / duration);
            if (duration > (scroll_done - this.px) && this.px < scroll_done && (scroll_done - this.px) < this.anima_prop_x) {
                this.tag.style.transform = this.t_type + '(' + this.anima_sign_x + proc_x + 'px, ' + this.anima_sign_y + proc_y + 'px)';
            }
        }
    };
    this.vanima = function () {
        if (this.isVisible()) {
            this.tag.style.transform = 'none';
            this.tag.style.opacity = 1;
        } else {
            this.tag.style.transform = this.spanTransform;
            this.tag.style.opacity = 0;
        }
    };
}

var s = new Anima("tester", 300);
s.addSpan('char');
s.spanCss(undefined, undefined, 10);

window.addEventListener('scroll', function (e) {
    s.sspan(true);
});
